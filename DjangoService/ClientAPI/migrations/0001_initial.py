# Generated by Django 4.2.8 on 2023-12-06 16:13

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.TextField(default='Новая категория', max_length=255, unique=True, verbose_name='category_name')),
            ],
            options={
                'db_table': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('goods_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(default='Без названия', max_length=255, verbose_name='title')),
                ('description', models.TextField(max_length=255, verbose_name='description')),
                ('price_rub', models.FloatField(default=0.0, verbose_name='price_rub')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ClientAPI.category')),
            ],
            options={
                'db_table': 'Goods',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('datetimes', models.DateTimeField(default=datetime.datetime(2023, 12, 6, 16, 13, 42, 46296, tzinfo=datetime.timezone.utc), verbose_name='datetimes')),
                ('sum_price', models.FloatField(default=0.0, verbose_name='sum_price')),
                ('is_working', models.BooleanField(default=False, verbose_name='is_working')),
                ('is_ready', models.BooleanField(default=False, verbose_name='is_ready')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is_deleted')),
                ('goods', models.ManyToManyField(to='ClientAPI.goods')),
            ],
            options={
                'db_table': 'Order',
            },
        ),
    ]
